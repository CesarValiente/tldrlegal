apply plugin: 'com.android.application'
apply plugin: 'com.neenbedankt.android-apt'

android {

    def globalConfiguration = rootProject.extensions.getByName("ext")

    compileSdkVersion globalConfiguration.getAt("androidCompileSdkVersion")
    buildToolsVersion globalConfiguration.getAt("androidBuildToolsVersion")

    defaultConfig {
        applicationId globalConfiguration.getAt("androidApplicationId")
        minSdkVersion globalConfiguration.getAt("androidMinSdkVersion")
        targetSdkVersion globalConfiguration.getAt("androidTargetSdkVersion")
        versionCode globalConfiguration.getAt("androidVersionCode")
        versionName globalConfiguration.getAt("androidVersionName")
        testInstrumentationRunner globalConfiguration.getAt("testInstrumentationRunner")
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_7
        targetCompatibility JavaVersion.VERSION_1_7
    }

    packagingOptions {
        exclude 'LICENSE.txt'
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/ASL2.0'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/services/javax.annotation.processing.Processor'   //Necessary since Realm, in the data
        // module uses internally javax.annotation.processing.Processor
    }

    lintOptions {
        abortOnError false;
        disable 'InvalidPackage'            //Some libraries have issues with this.
        disable 'OldTargetApi'              //Lint gives this warning but SDK 20 would be Android L Beta.
        disable 'IconDensities'             //For testing purpose. This is safe to remove.
        disable 'IconMissingDensityFolder'  //For testing purpose. This is safe to remove.
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        nightly {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}

dependencies {

    def mobileDependencies = rootProject.ext.mobileDependencies
    def mobileTestDependencies = rootProject.ext.mobileTestDependencies

    compile project(':domain')
    compile project(':data')
    wearApp project(':wear')

    apt mobileDependencies.daggerCompiler
    compile mobileDependencies.dagger
    compile mobileDependencies.rxJava
    compile mobileDependencies.rxAndroid
    provided mobileDependencies.javaxAnnotation
    compile mobileDependencies.butterKnife
    compile mobileDependencies.recyclerView
    compile mobileDependencies.appCompat
    compile mobileDependencies.playServices

    androidTestCompile mobileTestDependencies.mockito
    androidTestCompile mobileTestDependencies.dexmaker
    androidTestCompile mobileTestDependencies.dexmakerMockito
    androidTestCompile mobileTestDependencies.espresso
    androidTestCompile mobileTestDependencies.testingSupportLib
}
